apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudbeaver-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cloudbeaver-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cloudbeaver-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: cloudbeaver-sa
  namespace: default
roleRef:
  kind: Role
  name: cloudbeaver-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cloudbeaver-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudbeaver
  labels:
    app: cloudbeaver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudbeaver
  template:
    metadata:
      labels:
        app: cloudbeaver
    spec:
      serviceAccountName: cloudbeaver-sa
      containers:
      - name: cloudbeaver
        image: dbeaver/cloudbeaver:latest # Community edition
        ports:
        - containerPort: 8978
          name: http
        volumeMounts:
        - name: cloudbeaver-workspace
          mountPath: /opt/cloudbeaver/workspace
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: cloudbeaver-workspace
        persistentVolumeClaim:
          claimName: cloudbeaver-data
---
apiVersion: v1
kind: Service
metadata:
  name: cloudbeaver
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8978
      targetPort: 8978
      protocol: TCP
      nodePort: 30978  # Explicitly setting NodePort
  selector:
    app: cloudbeaver
